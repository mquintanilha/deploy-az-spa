on:
  push:
    branches:
      - develop
    
#  pull_request:
#    branches:
#      - "*"

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: ${{ github.workspace }}
  
  build:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: 8eab29e/remessa-corp:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  
  deploy:
    runs-on: ubuntu-latest
    env:
      working-directory: ./deploy/site
      GITHUB_TOKEN: ${{ secrets.CHALLENGE_TOKEN }}
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy resources
        id: deploy_resource
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.4

     # - name: Azure Login
     #   uses: azure/CLI@v1
     #   with:
     #     azcliversion: 2.23.0
     #     inlineScript: |
     #         export ARM_USE_MSI=true 
     #         export ARM_CLIENT_ID="${{ secrets.CLIENT_ID }}"
     #         export ARM_SUBSCRIPTION_ID="${{ secrets.SUBSCRIPTION_ID }}"
     #         export ARM_TENANT_ID="${{ secrets.TENANT_ID }}"
     #         az login


      - name: AZRM Login
        uses: azure/login@v1.1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

      - name: Terraform Init
        run: terraform -chdir=${{ env.working-directory }} init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=${{ env.working-directory }} validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=${{ env.working-directory }} plan -no-color
        continue-on-error: true